%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 1491 890
%%Creator: yExport 1.4.0.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, September 25, 2013 4:56:18 PM BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
1491 890 setpagesize
0 0 0 0 setmargins
0 0 setorigin
1491 890 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1491.00 0.00000 l
1491.00 890.000 l
0.00000 890.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 1491 890 rc
q
[ 1.95312 0.00000 0.00000 1.95312 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -475.000 -250.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
475.000 250.000 m
1239.00 250.000 l
1239.00 706.000 l
475.000 706.000 l
475.000 250.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.95312 0.00000 0.00000 1.95312 -927.734 -488.281 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.95312 0.00000 0.00000 1.95312 -927.734 -488.281 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.95312 0.00000 0.00000 1.95312 -927.734 -488.281 ] defaultmatrix matrix concatmatrix setmatrix
q
q
[ 152.000 0.00000 0.00000 197.000 470.700 424.420 ] concat
<<
/ImageType 1
/Width 152  /Height 197
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [152 0 0 197 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0PgJ1pL(e*EXIjQ[L&1NEcUkhkZUn$MAJ7*pD3s-od2GLV`2X,=2='WO5=C_AHmAD<3!!(sW[TkG7
rq6GffPL>'jo#@jk$kT_cf_XfloW(\4kItps49Qo4G-g'X%aq)nT[/9%e&lTmgp9%[e<rf5FkOa<!2fJ
P_uCe5q?WJ?E_su[i:=H\!7l?:]"D#f:1%ImHs:K0MkIQe8&"JbF1gfe5N&meS=dJo!2@K((,c!#`Em'
io6\3.Of/2di"-7RS(iVX+jLE22SG9X'@8mbtKIJ8u7]mj;3J<]:D]pF1IefkiV$)g[.0e4D;G1NoYL'
FXQH6eKcX(aiR+:*rh2'*3SKm//Cl(&fMr'VX?=tR$t4/,H6^7)0I(f7+H:W725:Mi8>88(PtPSdAUY5
T?gRgQ%$KOb:[0mI8/n/%TPXlRV3_>>"WSu+`uF]9p"KcS'C5me1IY@;K"Vt4)0!t_KoS;<NB&%"9,sn
Nh=]0i'k\]USH;e;k8noGL[H(g5^LPe`Ea'Ibo(rJ+9;dC<'W[\W;H)*pDg=NZREJJW:f8k^ea8kidSX
*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=
NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJ
JW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8
k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8
kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX
*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDg=NZREJJW:f8k^ea8kidSX*pDfr
HQ>ZqRa#aMPE(>`iC-7ODVL(tIS\#;Cc37C)i_l5q0=HTMFOB<qtk^Gh7@)Y*m\@PV,F;AktEFfi#V"P
q05#>[9@k\oH`XGct^1A:-YID,bi11O[u"5SR#T0pNjO;FK.Sl3\HcB`F>P/h/6</c0+]?A24pY*?H7C
+C'f&@8*TJ3Z*"ah;-oOapZj!1qDp&;FdcW;@eCTfAkoO3'sDMf?9!pl><k40'dQ-+fV57K,1\d^8^R:
,l@Oh]jAIb]$^tIC1ag*$ppYicK0(-%#`*!:;phOWF:1%Hjk6[DQM`=oQE&.%,1)lX]DK%.chCN\7KJN
Bgj,.Y?J&CN\lSR)g*t%^'d,`RupsjnEB&1d7=e#AlJG?(Lb^/CPYqde"fQ7`8ET7T.)Y=Wi>;^92-!N
mC@CHql^@1S]&8H>rP3>f%^3'JcGcN^i')P^Zm^D~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [478.70001220703125 432.4200134277344 610.4199829101562 608.8599853515625]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [0.8 0.8 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
478.700 436.420 m
478.700 604.860 l
478.700 607.069 480.491 608.860 482.700 608.860  c
606.420 608.860 l
608.629 608.860 610.420 607.069 610.420 604.860  c
610.420 436.420 l
610.420 434.211 608.629 432.420 606.420 432.420  c
482.700 432.420 l
480.491 432.420 478.700 434.211 478.700 436.420  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
478.700 436.420 m
478.700 604.860 l
478.700 607.069 480.491 608.860 482.700 608.860  c
606.420 608.860 l
608.629 608.860 610.420 607.069 610.420 604.860  c
610.420 436.420 l
610.420 434.211 608.629 432.420 606.420 432.420  c
482.700 432.420 l
480.491 432.420 478.700 434.211 478.700 436.420  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
Q
q
q
[ 398.906 0.00000 0.00000 206.680 847.207 419.487 ] concat
<<
/ImageType 1
/Width 276  /Height 143
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [276 0 0 143 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0Qa\n@+'SXs/J#8qC8jk7F$l]`\5n+O(Oi!nK"g&eUK]+W<<DG=$)ZTgXSM/:%5CNS4!!!#6h=k,4
0MP#Hs'MeJ+kP>thnFLX%YnD"3b6r#o9oMR6q'*22htXE?4I0lZa6uf?oi]2o&]fI4HlE5^M?$.NKX?`
_Wg=LiSibprr.Z`+80*jA^3+!RJBO*k'rWAq!I/&r/r._O,nA9cHa_tk2uNB24/'\?G1[`qK6C6&Y5G^
>[1Opr\jc@a_`U;/)B=]SFc[SoB#)q-Vp?3%?iDc^9Y'8il-hXXf]fsY&IHD=(AD),aQf_FL&>Q?c'p9
$O[>l_5*QmT>,mUrdtFd;Gcr;h;(4T3m-a02Aril>hJUPb,m<u[5=8GAnPcVKLn*Y1NW$A]t(\a`Poei
IP+n2#7#mt+PUGNG.rG(RT5W,Q+LB)9TM4-&"!EnI'S0dQBjEe2ElTfQp#KAG4tY'f%8Mp@Jea'$r"$8
gWA$fma)H&6T`ZB%Wo&[*UQ*^44)@bFL2,jm6F0'd*W>FZi_?95Y!o_d119*"!-bo7m#)F%Wo&[*UQ*^
44)@bFL2,jm6F0'd*W>FZi_?95Y!o_d119*"!-bo7m#)F%Wo&[*UQ*^44)@bFL2,jm6F0'd*W>FZi_?9
5Y!o_d119*"!-bo7m#)F%Wo&[*UQ*^44)@bFL2,jm6F0'd*W>FZi_?95Y!o_d119*"!-bo7m#)F%Wo&[
*UQ*^44)@bFL2,jm6F0'd*W>FZi_?95Y!o_d119*"!-bo7m#)F%Wo&[*UQ*^44)@bFL2,jm6F0'd*W>F
Zi_?95Y!o_d119*"!-bo7m#)F%Wo&[*UQ*^44)@bFL2,jm6F0'd*W>FZi_?95Y!o_d118I?T[geK)M3Y
mD,:j?gXASS`R&7NK'd2V4<auEoruJd7-Je4$1'YYctdQ]XbS`^V;uM%*!3u3#ng'K7efYXf^.(eV=YW
cHjh__A&B,S'+7ddA'3-T0D)fhZ!03e+rh8p%A!FmA.%GMi6WUj0rsa^3o`3!Tp<c0Ei4.(EYkj]X"iK
[^Pnth7Jl7PKV.m1#%P4H$+7p-VkN/Rl>9Vl?W*ifd][HXIDn1Aq"B*-WdK6?Lic[\[`TaSY)tGo^juT
^OQ8Ik@B)($F^HXC?nod`U</3Aj2ENq&_2Z'JX2]OjK7eIS=sX5CYjX3]]Acqud]#n5`jGRJAu@1]OF^
r2'"#4t/)l/,-O>TQ?J%(Ul0k_r:*f)s:;[DiGrml&hAU%=]0(z0W'=#fc,9l~>
Q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [859.6599731445312 431.94000244140625 1229.6199951171875 609.3400268554688]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [0.83137256 0.83137256 0.83137256]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
859.660 435.940 m
859.660 605.340 l
859.660 607.549 861.451 609.340 863.660 609.340  c
1225.62 609.340 l
1227.83 609.340 1229.62 607.549 1229.62 605.340  c
1229.62 435.940 l
1229.62 433.731 1227.83 431.940 1225.62 431.940  c
863.660 431.940 l
861.451 431.940 859.660 433.731 859.660 435.940  c
h
f
0 J
1.45000 M
.0705882 .243137 .635294 RG
newpath
859.660 435.940 m
859.660 605.340 l
859.660 607.549 861.451 609.340 863.660 609.340  c
1225.62 609.340 l
1227.83 609.340 1229.62 607.549 1229.62 605.340  c
1229.62 435.940 l
1229.62 433.731 1227.83 431.940 1225.62 431.940  c
863.660 431.940 l
861.451 431.940 859.660 433.731 859.660 435.940  c
h
S
0.00000 0.00000 0.00000 RG
2 J
10.0000 M
Q
1.00000 .800000 0.00000 RG
newpath
864.560 446.440 m
904.560 446.440 l
904.560 476.440 l
864.560 476.440 l
864.560 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
874.420 465.407 m
874.420 464.329 l
874.722 464.475 875.025 464.584 875.327 464.657  c
875.629 464.730 875.931 464.766 876.233 464.766  c
877.014 464.766 877.610 464.503 878.022 463.977  c
878.433 463.451 878.665 462.652 878.717 461.579  c
878.498 461.922 878.215 462.183 877.866 462.360  c
877.517 462.537 877.129 462.626 876.702 462.626  c
875.827 462.626 875.134 462.363 874.623 461.836  c
874.113 461.310 873.858 460.584 873.858 459.657  c
873.858 458.761 874.123 458.042 874.655 457.501  c
875.186 456.959 875.894 456.688 876.780 456.688  c
877.790 456.688 878.564 457.076 879.100 457.852  c
879.636 458.628 879.905 459.756 879.905 461.235  c
879.905 462.610 879.577 463.709 878.920 464.532  c
878.264 465.355 877.384 465.766 876.280 465.766  c
875.978 465.766 875.676 465.738 875.373 465.680  c
875.071 465.623 874.754 465.532 874.420 465.407  c
h
876.780 461.704 m
877.311 461.704 877.733 461.521 878.045 461.157  c
878.358 460.792 878.514 460.292 878.514 459.657  c
878.514 459.032 878.358 458.537 878.045 458.172  c
877.733 457.808 877.311 457.626 876.780 457.626  c
876.248 457.626 875.829 457.808 875.522 458.172  c
875.215 458.537 875.061 459.032 875.061 459.657  c
875.061 460.292 875.215 460.792 875.522 461.157  c
875.829 461.521 876.248 461.704 876.780 461.704  c
h
884.555 457.626 m
883.951 457.626 883.495 457.925 883.188 458.524  c
882.881 459.123 882.727 460.027 882.727 461.235  c
882.727 462.433 882.881 463.331 883.188 463.930  c
883.495 464.529 883.951 464.829 884.555 464.829  c
885.170 464.829 885.631 464.529 885.938 463.930  c
886.245 463.331 886.399 462.433 886.399 461.235  c
886.399 460.027 886.245 459.123 885.938 458.524  c
885.631 457.925 885.170 457.626 884.555 457.626  c
h
884.555 456.688 m
885.534 456.688 886.284 457.076 886.805 457.852  c
887.326 458.628 887.586 459.756 887.586 461.235  c
887.586 462.704 887.326 463.826 886.805 464.602  c
886.284 465.378 885.534 465.766 884.555 465.766  c
883.576 465.766 882.829 465.378 882.313 464.602  c
881.797 463.826 881.539 462.704 881.539 461.235  c
881.539 459.756 881.797 458.628 882.313 457.852  c
882.829 457.076 883.576 456.688 884.555 456.688  c
h
892.190 457.626 m
891.586 457.626 891.130 457.925 890.823 458.524  c
890.515 459.123 890.362 460.027 890.362 461.235  c
890.362 462.433 890.515 463.331 890.823 463.930  c
891.130 464.529 891.586 464.829 892.190 464.829  c
892.804 464.829 893.265 464.529 893.573 463.930  c
893.880 463.331 894.034 462.433 894.034 461.235  c
894.034 460.027 893.880 459.123 893.573 458.524  c
893.265 457.925 892.804 457.626 892.190 457.626  c
h
892.190 456.688 m
893.169 456.688 893.919 457.076 894.440 457.852  c
894.961 458.628 895.221 459.756 895.221 461.235  c
895.221 462.704 894.961 463.826 894.440 464.602  c
893.919 465.378 893.169 465.766 892.190 465.766  c
891.211 465.766 890.463 465.378 889.948 464.602  c
889.432 463.826 889.174 462.704 889.174 461.235  c
889.174 459.756 889.432 458.628 889.948 457.852  c
890.463 457.076 891.211 456.688 892.190 456.688  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
864.560 446.440 m
904.560 446.440 l
904.560 476.440 l
864.560 476.440 l
864.560 446.440 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
904.621 446.440 m
944.621 446.440 l
944.621 476.440 l
904.621 476.440 l
904.621 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
910.836 464.594 m
912.774 464.594 l
912.774 457.922 l
910.664 458.344 l
910.664 457.266 l
912.758 456.844 l
913.945 456.844 l
913.945 464.594 l
915.883 464.594 l
915.883 465.594 l
910.836 465.594 l
910.836 464.594 l
h
920.799 457.626 m
920.195 457.626 919.739 457.925 919.432 458.524  c
919.124 459.123 918.971 460.027 918.971 461.235  c
918.971 462.433 919.124 463.331 919.432 463.930  c
919.739 464.529 920.195 464.829 920.799 464.829  c
921.414 464.829 921.874 464.529 922.182 463.930  c
922.489 463.331 922.643 462.433 922.643 461.235  c
922.643 460.027 922.489 459.123 922.182 458.524  c
921.874 457.925 921.414 457.626 920.799 457.626  c
h
920.799 456.688 m
921.778 456.688 922.528 457.076 923.049 457.852  c
923.570 458.628 923.830 459.756 923.830 461.235  c
923.830 462.704 923.570 463.826 923.049 464.602  c
922.528 465.378 921.778 465.766 920.799 465.766  c
919.820 465.766 919.072 465.378 918.557 464.602  c
918.041 463.826 917.783 462.704 917.783 461.235  c
917.783 459.756 918.041 458.628 918.557 457.852  c
919.072 457.076 919.820 456.688 920.799 456.688  c
h
926.918 464.594 m
931.059 464.594 l
931.059 465.594 l
925.496 465.594 l
925.496 464.594 l
925.944 464.136 926.556 463.514 927.332 462.727  c
928.108 461.941 928.595 461.433 928.793 461.204  c
929.179 460.787 929.447 460.430 929.598 460.133  c
929.749 459.836 929.824 459.547 929.824 459.266  c
929.824 458.797 929.660 458.417 929.332 458.126  c
929.004 457.834 928.580 457.688 928.059 457.688  c
927.684 457.688 927.290 457.751 926.879 457.876  c
926.468 458.001 926.027 458.198 925.559 458.469  c
925.559 457.266 l
926.038 457.079 926.483 456.935 926.895 456.836  c
927.306 456.738 927.684 456.688 928.027 456.688  c
928.934 456.688 929.658 456.915 930.199 457.368  c
930.741 457.821 931.012 458.428 931.012 459.188  c
931.012 459.542 930.944 459.881 930.809 460.204  c
930.673 460.527 930.429 460.907 930.074 461.344  c
929.970 461.459 929.658 461.787 929.137 462.329  c
928.616 462.870 927.876 463.626 926.918 464.594  c
h
937.131 460.876 m
937.693 461.001 938.134 461.253 938.451 461.633  c
938.769 462.014 938.928 462.485 938.928 463.047  c
938.928 463.912 938.631 464.581 938.037 465.055  c
937.443 465.529 936.600 465.766 935.506 465.766  c
935.141 465.766 934.764 465.730 934.373 465.657  c
933.983 465.584 933.584 465.475 933.178 465.329  c
933.178 464.188 l
933.501 464.376 933.858 464.519 934.248 464.618  c
934.639 464.717 935.048 464.766 935.475 464.766  c
936.214 464.766 936.779 464.620 937.170 464.329  c
937.561 464.037 937.756 463.610 937.756 463.047  c
937.756 462.537 937.574 462.136 937.209 461.844  c
936.845 461.553 936.345 461.407 935.709 461.407  c
934.678 461.407 l
934.678 460.438 l
935.756 460.438 l
936.329 460.438 936.772 460.321 937.084 460.086  c
937.397 459.852 937.553 459.516 937.553 459.079  c
937.553 458.631 937.394 458.287 937.076 458.047  c
936.759 457.808 936.303 457.688 935.709 457.688  c
935.376 457.688 935.024 457.722 934.654 457.790  c
934.285 457.857 933.876 457.964 933.428 458.110  c
933.428 457.063 l
933.886 456.938 934.311 456.844 934.701 456.782  c
935.092 456.719 935.459 456.688 935.803 456.688  c
936.709 456.688 937.423 456.891 937.943 457.297  c
938.464 457.704 938.725 458.256 938.725 458.954  c
938.725 459.443 938.587 459.855 938.311 460.188  c
938.035 460.521 937.641 460.751 937.131 460.876  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
904.621 446.440 m
944.621 446.440 l
944.621 476.440 l
904.621 476.440 l
904.621 446.440 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
944.682 446.440 m
984.682 446.440 l
984.682 476.440 l
944.682 476.440 l
944.682 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
954.215 456.844 m
959.840 456.844 l
959.840 457.344 l
956.668 465.594 l
955.433 465.594 l
958.418 457.844 l
954.215 457.844 l
954.215 456.844 l
h
963.162 464.594 m
967.303 464.594 l
967.303 465.594 l
961.740 465.594 l
961.740 464.594 l
962.188 464.136 962.800 463.514 963.576 462.727  c
964.352 461.941 964.839 461.433 965.037 461.204  c
965.422 460.787 965.691 460.430 965.842 460.133  c
965.993 459.836 966.068 459.547 966.068 459.266  c
966.068 458.797 965.904 458.417 965.576 458.126  c
965.248 457.834 964.823 457.688 964.303 457.688  c
963.928 457.688 963.534 457.751 963.123 457.876  c
962.711 458.001 962.271 458.198 961.803 458.469  c
961.803 457.266 l
962.282 457.079 962.727 456.935 963.138 456.836  c
963.550 456.738 963.928 456.688 964.271 456.688  c
965.178 456.688 965.902 456.915 966.443 457.368  c
966.985 457.821 967.256 458.428 967.256 459.188  c
967.256 459.542 967.188 459.881 967.053 460.204  c
966.917 460.527 966.672 460.907 966.318 461.344  c
966.214 461.459 965.902 461.787 965.381 462.329  c
964.860 462.870 964.120 463.626 963.162 464.594  c
h
969.984 464.594 m
971.922 464.594 l
971.922 457.922 l
969.812 458.344 l
969.812 457.266 l
971.906 456.844 l
973.094 456.844 l
973.094 464.594 l
975.031 464.594 l
975.031 465.594 l
969.984 465.594 l
969.984 464.594 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
944.682 446.440 m
984.682 446.440 l
984.682 476.440 l
944.682 476.440 l
944.682 446.440 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
984.744 446.440 m
1024.74 446.440 l
1024.74 476.440 l
984.744 476.440 l
984.744 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
995.588 464.594 m
999.729 464.594 l
999.729 465.594 l
994.167 465.594 l
994.167 464.594 l
994.614 464.136 995.226 463.514 996.002 462.727  c
996.778 461.941 997.265 461.433 997.463 461.204  c
997.849 460.787 998.117 460.430 998.268 460.133  c
998.419 459.836 998.495 459.547 998.495 459.266  c
998.495 458.797 998.331 458.417 998.002 458.126  c
997.674 457.834 997.250 457.688 996.729 457.688  c
996.354 457.688 995.961 457.751 995.549 457.876  c
995.138 458.001 994.698 458.198 994.229 458.469  c
994.229 457.266 l
994.708 457.079 995.153 456.935 995.565 456.836  c
995.976 456.738 996.354 456.688 996.698 456.688  c
997.604 456.688 998.328 456.915 998.870 457.368  c
999.411 457.821 999.682 458.428 999.682 459.188  c
999.682 459.542 999.614 459.881 999.479 460.204  c
999.344 460.527 999.099 460.907 998.745 461.344  c
998.640 461.459 998.328 461.787 997.807 462.329  c
997.286 462.870 996.547 463.626 995.588 464.594  c
h
1002.22 456.844 m
1006.86 456.844 l
1006.86 457.844 l
1003.30 457.844 l
1003.30 459.985 l
1003.48 459.922 1003.65 459.878 1003.82 459.852  c
1004.00 459.826 1004.17 459.813 1004.33 459.813  c
1005.31 459.813 1006.09 460.081 1006.66 460.618  c
1007.23 461.154 1007.52 461.876 1007.52 462.782  c
1007.52 463.730 1007.23 464.464 1006.64 464.985  c
1006.05 465.506 1005.22 465.766 1004.16 465.766  c
1003.79 465.766 1003.41 465.735 1003.03 465.672  c
1002.65 465.610 1002.25 465.516 1001.85 465.391  c
1001.85 464.204 l
1002.20 464.391 1002.57 464.532 1002.94 464.626  c
1003.32 464.719 1003.71 464.766 1004.13 464.766  c
1004.81 464.766 1005.34 464.589 1005.74 464.235  c
1006.13 463.881 1006.33 463.396 1006.33 462.782  c
1006.33 462.178 1006.13 461.698 1005.74 461.344  c
1005.34 460.990 1004.81 460.813 1004.13 460.813  c
1003.82 460.813 1003.50 460.847 1003.18 460.915  c
1002.87 460.982 1002.55 461.089 1002.22 461.235  c
1002.22 456.844 l
h
1012.53 460.751 m
1012.00 460.751 1011.58 460.933 1011.26 461.297  c
1010.95 461.662 1010.80 462.157 1010.80 462.782  c
1010.80 463.417 1010.95 463.917 1011.26 464.282  c
1011.58 464.646 1012.00 464.829 1012.53 464.829  c
1013.06 464.829 1013.48 464.646 1013.79 464.282  c
1014.09 463.917 1014.25 463.417 1014.25 462.782  c
1014.25 462.157 1014.09 461.662 1013.79 461.297  c
1013.48 460.933 1013.06 460.751 1012.53 460.751  c
h
1014.87 457.032 m
1014.87 458.110 l
1014.57 457.975 1014.27 457.870 1013.97 457.797  c
1013.67 457.725 1013.37 457.688 1013.08 457.688  c
1012.30 457.688 1011.70 457.951 1011.29 458.477  c
1010.88 459.003 1010.64 459.797 1010.58 460.860  c
1010.81 460.527 1011.09 460.269 1011.44 460.086  c
1011.79 459.904 1012.18 459.813 1012.59 459.813  c
1013.47 459.813 1014.16 460.079 1014.67 460.610  c
1015.18 461.141 1015.44 461.865 1015.44 462.782  c
1015.44 463.688 1015.17 464.412 1014.64 464.954  c
1014.11 465.495 1013.40 465.766 1012.53 465.766  c
1011.51 465.766 1010.73 465.378 1010.20 464.602  c
1009.67 463.826 1009.40 462.704 1009.40 461.235  c
1009.40 459.850 1009.73 458.745 1010.39 457.922  c
1011.05 457.100 1011.93 456.688 1013.03 456.688  c
1013.32 456.688 1013.62 456.717 1013.92 456.774  c
1014.22 456.831 1014.54 456.917 1014.87 457.032  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
984.744 446.440 m
1024.74 446.440 l
1024.74 476.440 l
984.744 476.440 l
984.744 446.440 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
1024.80 446.440 m
1064.80 446.440 l
1064.80 476.440 l
1024.80 476.440 l
1024.80 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1042.47 464.594 m
1044.41 464.594 l
1044.41 457.922 l
1042.30 458.344 l
1042.30 457.266 l
1044.39 456.844 l
1045.58 456.844 l
1045.58 464.594 l
1047.52 464.594 l
1047.52 465.594 l
1042.47 465.594 l
1042.47 464.594 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1024.80 446.440 m
1064.80 446.440 l
1064.80 476.440 l
1024.80 476.440 l
1024.80 446.440 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
1064.87 446.440 m
1104.87 446.440 l
1104.87 476.440 l
1064.87 476.440 l
1064.87 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1078.72 464.594 m
1080.65 464.594 l
1080.65 457.922 l
1078.54 458.344 l
1078.54 457.266 l
1080.64 456.844 l
1081.83 456.844 l
1081.83 464.594 l
1083.76 464.594 l
1083.76 465.594 l
1078.72 465.594 l
1078.72 464.594 l
h
1088.68 457.626 m
1088.07 457.626 1087.62 457.925 1087.31 458.524  c
1087.00 459.123 1086.85 460.027 1086.85 461.235  c
1086.85 462.433 1087.00 463.331 1087.31 463.930  c
1087.62 464.529 1088.07 464.829 1088.68 464.829  c
1089.29 464.829 1089.75 464.529 1090.06 463.930  c
1090.37 463.331 1090.52 462.433 1090.52 461.235  c
1090.52 460.027 1090.37 459.123 1090.06 458.524  c
1089.75 457.925 1089.29 457.626 1088.68 457.626  c
h
1088.68 456.688 m
1089.66 456.688 1090.41 457.076 1090.93 457.852  c
1091.45 458.628 1091.71 459.756 1091.71 461.235  c
1091.71 462.704 1091.45 463.826 1090.93 464.602  c
1090.41 465.378 1089.66 465.766 1088.68 465.766  c
1087.70 465.766 1086.95 465.378 1086.44 464.602  c
1085.92 463.826 1085.66 462.704 1085.66 461.235  c
1085.66 459.756 1085.92 458.628 1086.44 457.852  c
1086.95 457.076 1087.70 456.688 1088.68 456.688  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1064.87 446.440 m
1104.87 446.440 l
1104.87 476.440 l
1064.87 476.440 l
1064.87 446.440 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
1104.93 446.440 m
1144.93 446.440 l
1144.93 476.440 l
1104.93 476.440 l
1104.93 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1114.79 465.407 m
1114.79 464.329 l
1115.09 464.475 1115.39 464.584 1115.69 464.657  c
1116.00 464.730 1116.30 464.766 1116.60 464.766  c
1117.38 464.766 1117.98 464.503 1118.39 463.977  c
1118.80 463.451 1119.03 462.652 1119.08 461.579  c
1118.87 461.922 1118.58 462.183 1118.23 462.360  c
1117.88 462.537 1117.50 462.626 1117.07 462.626  c
1116.19 462.626 1115.50 462.363 1114.99 461.836  c
1114.48 461.310 1114.23 460.584 1114.23 459.657  c
1114.23 458.761 1114.49 458.042 1115.02 457.501  c
1115.55 456.959 1116.26 456.688 1117.15 456.688  c
1118.16 456.688 1118.93 457.076 1119.47 457.852  c
1120.00 458.628 1120.27 459.756 1120.27 461.235  c
1120.27 462.610 1119.94 463.709 1119.29 464.532  c
1118.63 465.355 1117.75 465.766 1116.65 465.766  c
1116.35 465.766 1116.04 465.738 1115.74 465.680  c
1115.44 465.623 1115.12 465.532 1114.79 465.407  c
h
1117.15 461.704 m
1117.68 461.704 1118.10 461.521 1118.41 461.157  c
1118.73 460.792 1118.88 460.292 1118.88 459.657  c
1118.88 459.032 1118.73 458.537 1118.41 458.172  c
1118.10 457.808 1117.68 457.626 1117.15 457.626  c
1116.62 457.626 1116.20 457.808 1115.89 458.172  c
1115.58 458.537 1115.43 459.032 1115.43 459.657  c
1115.43 460.292 1115.58 460.792 1115.89 461.157  c
1116.20 461.521 1116.62 461.704 1117.15 461.704  c
h
1124.92 457.626 m
1124.32 457.626 1123.86 457.925 1123.56 458.524  c
1123.25 459.123 1123.09 460.027 1123.09 461.235  c
1123.09 462.433 1123.25 463.331 1123.56 463.930  c
1123.86 464.529 1124.32 464.829 1124.92 464.829  c
1125.54 464.829 1126.00 464.529 1126.31 463.930  c
1126.61 463.331 1126.77 462.433 1126.77 461.235  c
1126.77 460.027 1126.61 459.123 1126.31 458.524  c
1126.00 457.925 1125.54 457.626 1124.92 457.626  c
h
1124.92 456.688 m
1125.90 456.688 1126.65 457.076 1127.17 457.852  c
1127.69 458.628 1127.95 459.756 1127.95 461.235  c
1127.95 462.704 1127.69 463.826 1127.17 464.602  c
1126.65 465.378 1125.90 465.766 1124.92 465.766  c
1123.94 465.766 1123.20 465.378 1122.68 464.602  c
1122.16 463.826 1121.91 462.704 1121.91 461.235  c
1121.91 459.756 1122.16 458.628 1122.68 457.852  c
1123.20 457.076 1123.94 456.688 1124.92 456.688  c
h
1132.56 457.626 m
1131.95 457.626 1131.50 457.925 1131.19 458.524  c
1130.88 459.123 1130.73 460.027 1130.73 461.235  c
1130.73 462.433 1130.88 463.331 1131.19 463.930  c
1131.50 464.529 1131.95 464.829 1132.56 464.829  c
1133.17 464.829 1133.63 464.529 1133.94 463.930  c
1134.25 463.331 1134.40 462.433 1134.40 461.235  c
1134.40 460.027 1134.25 459.123 1133.94 458.524  c
1133.63 457.925 1133.17 457.626 1132.56 457.626  c
h
1132.56 456.688 m
1133.54 456.688 1134.29 457.076 1134.81 457.852  c
1135.33 458.628 1135.59 459.756 1135.59 461.235  c
1135.59 462.704 1135.33 463.826 1134.81 464.602  c
1134.29 465.378 1133.54 465.766 1132.56 465.766  c
1131.58 465.766 1130.83 465.378 1130.32 464.602  c
1129.80 463.826 1129.54 462.704 1129.54 461.235  c
1129.54 459.756 1129.80 458.628 1130.32 457.852  c
1130.83 457.076 1131.58 456.688 1132.56 456.688  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1104.93 446.440 m
1144.93 446.440 l
1144.93 476.440 l
1104.93 476.440 l
1104.93 446.440 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
1143.99 446.440 m
1183.99 446.440 l
1183.99 476.440 l
1143.99 476.440 l
1143.99 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1158.65 464.594 m
1162.79 464.594 l
1162.79 465.594 l
1157.23 465.594 l
1157.23 464.594 l
1157.68 464.136 1158.29 463.514 1159.06 462.727  c
1159.84 461.941 1160.33 461.433 1160.53 461.204  c
1160.91 460.787 1161.18 460.430 1161.33 460.133  c
1161.48 459.836 1161.56 459.547 1161.56 459.266  c
1161.56 458.797 1161.39 458.417 1161.06 458.126  c
1160.74 457.834 1160.31 457.688 1159.79 457.688  c
1159.42 457.688 1159.02 457.751 1158.61 457.876  c
1158.20 458.001 1157.76 458.198 1157.29 458.469  c
1157.29 457.266 l
1157.77 457.079 1158.22 456.935 1158.63 456.836  c
1159.04 456.738 1159.42 456.688 1159.76 456.688  c
1160.67 456.688 1161.39 456.915 1161.93 457.368  c
1162.47 457.821 1162.74 458.428 1162.74 459.188  c
1162.74 459.542 1162.68 459.881 1162.54 460.204  c
1162.41 460.527 1162.16 460.907 1161.81 461.344  c
1161.70 461.459 1161.39 461.787 1160.87 462.329  c
1160.35 462.870 1159.61 463.626 1158.65 464.594  c
h
1167.80 457.626 m
1167.20 457.626 1166.74 457.925 1166.43 458.524  c
1166.13 459.123 1165.97 460.027 1165.97 461.235  c
1165.97 462.433 1166.13 463.331 1166.43 463.930  c
1166.74 464.529 1167.20 464.829 1167.80 464.829  c
1168.42 464.829 1168.88 464.529 1169.18 463.930  c
1169.49 463.331 1169.64 462.433 1169.64 461.235  c
1169.64 460.027 1169.49 459.123 1169.18 458.524  c
1168.88 457.925 1168.42 457.626 1167.80 457.626  c
h
1167.80 456.688 m
1168.78 456.688 1169.53 457.076 1170.05 457.852  c
1170.57 458.628 1170.83 459.756 1170.83 461.235  c
1170.83 462.704 1170.57 463.826 1170.05 464.602  c
1169.53 465.378 1168.78 465.766 1167.80 465.766  c
1166.82 465.766 1166.07 465.378 1165.56 464.602  c
1165.04 463.826 1164.79 462.704 1164.79 461.235  c
1164.79 459.756 1165.04 458.628 1165.56 457.852  c
1166.07 457.076 1166.82 456.688 1167.80 456.688  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1143.99 446.440 m
1183.99 446.440 l
1183.99 476.440 l
1143.99 476.440 l
1143.99 446.440 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
1183.99 446.440 m
1223.99 446.440 l
1223.99 476.440 l
1183.99 476.440 l
1183.99 446.440 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1199.55 464.110 m
1200.78 464.110 l
1200.78 465.594 l
1199.55 465.594 l
1199.55 464.110 l
h
1203.36 464.110 m
1204.60 464.110 l
1204.60 465.594 l
1203.36 465.594 l
1203.36 464.110 l
h
1207.18 464.110 m
1208.41 464.110 l
1208.41 465.594 l
1207.18 465.594 l
1207.18 464.110 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1183.99 446.440 m
1223.99 446.440 l
1223.99 476.440 l
1183.99 476.440 l
1183.99 446.440 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1175.20 595.404 m
1176.96 595.404 l
1179.20 601.357 l
1181.45 595.404 l
1183.21 595.404 l
1183.21 604.154 l
1182.06 604.154 l
1182.06 596.467 l
1179.79 602.467 l
1178.60 602.467 l
1176.35 596.467 l
1176.35 604.154 l
1175.20 604.154 l
1175.20 595.404 l
h
1188.49 600.857 m
1187.62 600.857 1187.02 600.956 1186.68 601.154  c
1186.35 601.352 1186.18 601.691 1186.18 602.170  c
1186.18 602.555 1186.30 602.860 1186.56 603.084  c
1186.81 603.308 1187.15 603.420 1187.58 603.420  c
1188.19 603.420 1188.67 603.209 1189.03 602.787  c
1189.39 602.365 1189.57 601.800 1189.57 601.092  c
1189.57 600.857 l
1188.49 600.857 l
h
1190.64 600.404 m
1190.64 604.154 l
1189.57 604.154 l
1189.57 603.154 l
1189.32 603.550 1189.01 603.844 1188.64 604.037  c
1188.28 604.230 1187.83 604.326 1187.30 604.326  c
1186.62 604.326 1186.09 604.136 1185.69 603.756  c
1185.30 603.376 1185.10 602.873 1185.10 602.248  c
1185.10 601.508 1185.35 600.951 1185.84 600.576  c
1186.33 600.201 1187.07 600.014 1188.05 600.014  c
1189.57 600.014 l
1189.57 599.904 l
1189.57 599.404 1189.40 599.019 1189.07 598.748  c
1188.75 598.477 1188.29 598.342 1187.71 598.342  c
1187.33 598.342 1186.96 598.389 1186.61 598.482  c
1186.25 598.576 1185.90 598.712 1185.58 598.889  c
1185.58 597.889 l
1185.98 597.732 1186.36 597.618 1186.73 597.545  c
1187.10 597.472 1187.46 597.436 1187.82 597.436  c
1188.76 597.436 1189.47 597.680 1189.94 598.170  c
1190.41 598.660 1190.64 599.404 1190.64 600.404  c
h
1193.94 595.732 m
1193.94 597.592 l
1196.15 597.592 l
1196.15 598.436 l
1193.94 598.436 l
1193.94 601.998 l
1193.94 602.529 1194.01 602.870 1194.15 603.021  c
1194.30 603.173 1194.60 603.248 1195.04 603.248  c
1196.15 603.248 l
1196.15 604.154 l
1195.04 604.154 l
1194.21 604.154 1193.64 603.998 1193.32 603.686  c
1193.00 603.373 1192.84 602.811 1192.84 601.998  c
1192.84 598.436 l
1192.06 598.436 l
1192.06 597.592 l
1192.84 597.592 l
1192.84 595.732 l
1193.94 595.732 l
h
1201.38 598.592 m
1201.25 598.529 1201.12 598.480 1200.98 598.443  c
1200.84 598.407 1200.68 598.389 1200.50 598.389  c
1199.90 598.389 1199.43 598.587 1199.10 598.982  c
1198.77 599.378 1198.61 599.951 1198.61 600.701  c
1198.61 604.154 l
1197.53 604.154 l
1197.53 597.592 l
1198.61 597.592 l
1198.61 598.607 l
1198.84 598.212 1199.14 597.917 1199.50 597.725  c
1199.86 597.532 1200.31 597.436 1200.83 597.436  c
1200.90 597.436 1200.98 597.441 1201.07 597.451  c
1201.16 597.462 1201.26 597.477 1201.36 597.498  c
1201.38 598.592 l
h
1202.50 597.592 m
1203.57 597.592 l
1203.57 604.154 l
1202.50 604.154 l
1202.50 597.592 l
h
1202.50 595.029 m
1203.57 595.029 l
1203.57 596.404 l
1202.50 596.404 l
1202.50 595.029 l
h
1211.30 597.592 m
1208.92 600.779 l
1211.41 604.154 l
1210.14 604.154 l
1208.24 601.576 l
1206.33 604.154 l
1205.05 604.154 l
1207.60 600.717 l
1205.27 597.592 l
1206.53 597.592 l
1208.28 599.936 l
1210.02 597.592 l
1211.30 597.592 l
h
1216.79 595.404 m
1218.56 595.404 l
1220.79 601.357 l
1223.04 595.404 l
1224.81 595.404 l
1224.81 604.154 l
1223.65 604.154 l
1223.65 596.467 l
1221.39 602.467 l
1220.20 602.467 l
1217.95 596.467 l
1217.95 604.154 l
1216.79 604.154 l
1216.79 595.404 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
554.089 595.244 m
555.855 595.244 l
558.089 601.197 l
560.339 595.244 l
562.105 595.244 l
562.105 603.994 l
560.949 603.994 l
560.949 596.307 l
558.683 602.307 l
557.496 602.307 l
555.246 596.307 l
555.246 603.994 l
554.089 603.994 l
554.089 595.244 l
h
567.380 600.697 m
566.516 600.697 565.914 600.796 565.576 600.994  c
565.237 601.192 565.068 601.531 565.068 602.010  c
565.068 602.395 565.195 602.700 565.451 602.924  c
565.706 603.148 566.047 603.260 566.474 603.260  c
567.078 603.260 567.560 603.049 567.919 602.627  c
568.279 602.205 568.458 601.640 568.458 600.932  c
568.458 600.697 l
567.380 600.697 l
h
569.537 600.244 m
569.537 603.994 l
568.458 603.994 l
568.458 602.994 l
568.208 603.390 567.901 603.684 567.537 603.877  c
567.172 604.070 566.724 604.166 566.193 604.166  c
565.516 604.166 564.979 603.976 564.583 603.596  c
564.188 603.216 563.990 602.713 563.990 602.088  c
563.990 601.348 564.237 600.791 564.732 600.416  c
565.227 600.041 565.964 599.854 566.943 599.854  c
568.458 599.854 l
568.458 599.744 l
568.458 599.244 568.294 598.859 567.966 598.588  c
567.638 598.317 567.182 598.182 566.599 598.182  c
566.224 598.182 565.857 598.229 565.497 598.322  c
565.138 598.416 564.797 598.552 564.474 598.729  c
564.474 597.729 l
564.870 597.572 565.253 597.458 565.622 597.385  c
565.992 597.312 566.354 597.276 566.708 597.276  c
567.656 597.276 568.365 597.520 568.833 598.010  c
569.302 598.500 569.537 599.244 569.537 600.244  c
h
572.828 595.572 m
572.828 597.432 l
575.046 597.432 l
575.046 598.276 l
572.828 598.276 l
572.828 601.838 l
572.828 602.369 572.900 602.710 573.046 602.862  c
573.192 603.013 573.489 603.088 573.937 603.088  c
575.046 603.088 l
575.046 603.994 l
573.937 603.994 l
573.104 603.994 572.528 603.838 572.210 603.526  c
571.893 603.213 571.734 602.651 571.734 601.838  c
571.734 598.276 l
570.953 598.276 l
570.953 597.432 l
571.734 597.432 l
571.734 595.572 l
572.828 595.572 l
h
580.267 598.432 m
580.142 598.369 580.009 598.320 579.869 598.283  c
579.728 598.247 579.569 598.229 579.392 598.229  c
578.788 598.229 578.322 598.427 577.994 598.822  c
577.665 599.218 577.501 599.791 577.501 600.541  c
577.501 603.994 l
576.423 603.994 l
576.423 597.432 l
577.501 597.432 l
577.501 598.447 l
577.731 598.052 578.027 597.757 578.392 597.565  c
578.757 597.372 579.199 597.276 579.720 597.276  c
579.793 597.276 579.874 597.281 579.962 597.291  c
580.051 597.302 580.147 597.317 580.251 597.338  c
580.267 598.432 l
h
581.388 597.432 m
582.466 597.432 l
582.466 603.994 l
581.388 603.994 l
581.388 597.432 l
h
581.388 594.869 m
582.466 594.869 l
582.466 596.244 l
581.388 596.244 l
581.388 594.869 l
h
590.191 597.432 m
587.816 600.619 l
590.300 603.994 l
589.035 603.994 l
587.128 601.416 l
585.222 603.994 l
583.941 603.994 l
586.488 600.557 l
584.160 597.432 l
585.425 597.432 l
587.175 599.776 l
588.910 597.432 l
590.191 597.432 l
h
600.747 598.697 m
601.018 598.208 601.341 597.848 601.716 597.619  c
602.091 597.390 602.534 597.276 603.044 597.276  c
603.732 597.276 604.261 597.515 604.630 597.994  c
605.000 598.473 605.185 599.151 605.185 600.026  c
605.185 603.994 l
604.107 603.994 l
604.107 600.072 l
604.107 599.437 603.995 598.968 603.771 598.666  c
603.547 598.364 603.206 598.213 602.747 598.213  c
602.185 598.213 601.742 598.398 601.419 598.768  c
601.096 599.138 600.935 599.645 600.935 600.291  c
600.935 603.994 l
599.857 603.994 l
599.857 600.072 l
599.857 599.437 599.745 598.968 599.521 598.666  c
599.297 598.364 598.951 598.213 598.482 598.213  c
597.930 598.213 597.492 598.398 597.169 598.768  c
596.846 599.138 596.685 599.645 596.685 600.291  c
596.685 603.994 l
595.607 603.994 l
595.607 597.432 l
596.685 597.432 l
596.685 598.447 l
596.935 598.052 597.232 597.757 597.576 597.565  c
597.919 597.372 598.326 597.276 598.794 597.276  c
599.274 597.276 599.680 597.395 600.013 597.635  c
600.346 597.875 600.591 598.229 600.747 598.697  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
564.560 447.304 m
604.560 447.304 l
604.560 477.304 l
564.560 477.304 l
564.560 447.304 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
580.120 464.974 m
581.354 464.974 l
581.354 466.458 l
580.120 466.458 l
580.120 464.974 l
h
583.934 464.974 m
585.168 464.974 l
585.168 466.458 l
583.934 466.458 l
583.934 464.974 l
h
587.748 464.974 m
588.983 464.974 l
588.983 466.458 l
587.748 466.458 l
587.748 464.974 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
564.560 447.304 m
604.560 447.304 l
604.560 477.304 l
564.560 477.304 l
564.560 447.304 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
524.560 447.304 m
564.560 447.304 l
564.560 477.304 l
524.560 477.304 l
524.560 447.304 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
524.560 447.304 m
564.560 447.304 l
564.560 477.304 l
524.560 477.304 l
524.560 447.304 l
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
484.560 447.304 m
524.560 447.304 l
524.560 477.304 l
484.560 477.304 l
484.560 447.304 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
484.560 447.304 m
524.560 447.304 l
524.560 477.304 l
484.560 477.304 l
484.560 447.304 l
h
S
2 J
10.0000 M
q
7.00000 w
0 J
1.45000 M
1.00000 w
newpath
641.765 453.254 m
620.788 462.060 l
641.811 470.754 l
638.647 465.512 l
638.647 465.512 l
853.139 464.940 l
853.117 457.940 l
638.629 458.512 l
638.629 458.512 l
641.765 453.254 l
h
S
7.00000 w
1.00000 w
newpath
700.073 485.359 m
700.073 487.437 l
699.417 486.812 698.711 486.348 697.956 486.046  c
697.201 485.744 696.401 485.593 695.557 485.593  c
693.891 485.593 692.615 486.101 691.729 487.117  c
690.844 488.132 690.401 489.604 690.401 491.531  c
690.401 493.458 690.844 494.929 691.729 495.945  c
692.615 496.960 693.891 497.468 695.557 497.468  c
696.401 497.468 697.201 497.317 697.956 497.015  c
698.711 496.713 699.417 496.250 700.073 495.625  c
700.073 497.687 l
699.385 498.156 698.656 498.507 697.885 498.742  c
697.115 498.976 696.302 499.093 695.448 499.093  c
693.240 499.093 691.500 498.419 690.229 497.070  c
688.958 495.721 688.323 493.875 688.323 491.531  c
688.323 489.187 688.958 487.341 690.229 485.992  c
691.500 484.643 693.240 483.968 695.448 483.968  c
696.313 483.968 697.130 484.083 697.901 484.312  c
698.672 484.541 699.396 484.890 700.073 485.359  c
h
707.288 489.140 m
706.319 489.140 705.556 489.515 704.999 490.265  c
704.441 491.015 704.163 492.046 704.163 493.359  c
704.163 494.661 704.441 495.690 704.999 496.445  c
705.556 497.200 706.319 497.578 707.288 497.578  c
708.246 497.578 709.004 497.200 709.561 496.445  c
710.119 495.690 710.397 494.661 710.397 493.359  c
710.397 492.057 710.119 491.028 709.561 490.273  c
709.004 489.518 708.246 489.140 707.288 489.140  c
h
707.288 487.609 m
708.850 487.609 710.077 488.117 710.967 489.132  c
711.858 490.148 712.303 491.557 712.303 493.359  c
712.303 495.140 711.858 496.541 710.967 497.562  c
710.077 498.583 708.850 499.093 707.288 499.093  c
705.715 499.093 704.486 498.583 703.600 497.562  c
702.715 496.541 702.272 495.140 702.272 493.359  c
702.272 491.557 702.715 490.148 703.600 489.132  c
704.486 488.117 705.715 487.609 707.288 487.609  c
h
723.805 489.968 m
724.253 489.166 724.790 488.572 725.415 488.187  c
726.040 487.802 726.774 487.609 727.618 487.609  c
728.753 487.609 729.631 488.007 730.251 488.804  c
730.870 489.601 731.180 490.734 731.180 492.203  c
731.180 498.812 l
729.383 498.812 l
729.383 492.265 l
729.383 491.223 729.196 490.447 728.821 489.937  c
728.446 489.427 727.878 489.171 727.118 489.171  c
726.191 489.171 725.456 489.481 724.915 490.101  c
724.373 490.721 724.102 491.562 724.102 492.625  c
724.102 498.812 l
722.290 498.812 l
722.290 492.265 l
722.290 491.213 722.105 490.434 721.735 489.929  c
721.365 489.424 720.795 489.171 720.024 489.171  c
719.107 489.171 718.378 489.481 717.837 490.101  c
717.295 490.721 717.024 491.562 717.024 492.625  c
717.024 498.812 l
715.212 498.812 l
715.212 487.875 l
717.024 487.875 l
717.024 489.578 l
717.430 488.901 717.920 488.403 718.493 488.085  c
719.066 487.768 719.748 487.609 720.540 487.609  c
721.331 487.609 722.006 487.812 722.563 488.218  c
723.120 488.625 723.535 489.208 723.805 489.968  c
h
736.507 497.171 m
736.507 502.968 l
734.694 502.968 l
734.694 487.875 l
736.507 487.875 l
736.507 489.531 l
736.882 488.885 737.358 488.403 737.936 488.085  c
738.514 487.768 739.204 487.609 740.007 487.609  c
741.329 487.609 742.408 488.138 743.241 489.195  c
744.074 490.252 744.491 491.640 744.491 493.359  c
744.491 495.078 744.074 496.463 743.241 497.515  c
742.408 498.567 741.329 499.093 740.007 499.093  c
739.204 499.093 738.514 498.934 737.936 498.617  c
737.358 498.299 736.882 497.817 736.507 497.171  c
h
742.616 493.359 m
742.616 492.036 742.345 490.997 741.803 490.242  c
741.262 489.486 740.517 489.109 739.569 489.109  c
738.611 489.109 737.861 489.486 737.319 490.242  c
736.777 490.997 736.507 492.036 736.507 493.359  c
736.507 494.671 736.777 495.705 737.319 496.460  c
737.861 497.216 738.611 497.593 739.569 497.593  c
740.517 497.593 741.262 497.216 741.803 496.460  c
742.345 495.705 742.616 494.671 742.616 493.359  c
h
753.796 489.546 m
753.598 489.432 753.379 489.348 753.139 489.296  c
752.900 489.244 752.639 489.218 752.358 489.218  c
751.337 489.218 750.556 489.546 750.014 490.203  c
749.473 490.859 749.202 491.807 749.202 493.046  c
749.202 498.812 l
747.389 498.812 l
747.389 487.875 l
749.202 487.875 l
749.202 489.578 l
749.577 488.911 750.066 488.416 750.671 488.093  c
751.275 487.770 752.014 487.609 752.889 487.609  c
753.004 487.609 753.137 487.617 753.288 487.632  c
753.439 487.648 753.608 487.671 753.796 487.703  c
753.796 489.546 l
h
765.034 492.890 m
765.034 493.765 l
756.784 493.765 l
756.857 495.005 757.227 495.950 757.893 496.601  c
758.560 497.252 759.492 497.578 760.690 497.578  c
761.378 497.578 762.044 497.492 762.690 497.320  c
763.336 497.148 763.982 496.895 764.628 496.562  c
764.628 498.250 l
763.982 498.531 763.320 498.742 762.643 498.882  c
761.966 499.023 761.279 499.093 760.581 499.093  c
758.831 499.093 757.448 498.585 756.432 497.570  c
755.417 496.554 754.909 495.182 754.909 493.453  c
754.909 491.661 755.391 490.239 756.354 489.187  c
757.318 488.135 758.622 487.609 760.268 487.609  c
761.737 487.609 762.898 488.083 763.753 489.031  c
764.607 489.979 765.034 491.265 765.034 492.890  c
h
763.237 492.359 m
763.227 491.380 762.953 490.598 762.417 490.015  c
761.880 489.432 761.169 489.140 760.284 489.140  c
759.284 489.140 758.482 489.421 757.878 489.984  c
757.273 490.546 756.924 491.343 756.831 492.375  c
763.237 492.359 l
h
774.964 488.203 m
774.964 489.890 l
774.453 489.630 773.924 489.434 773.378 489.304  c
772.831 489.174 772.266 489.109 771.682 489.109  c
770.786 489.109 770.117 489.247 769.674 489.523  c
769.232 489.799 769.010 490.208 769.010 490.750  c
769.010 491.166 769.169 491.494 769.487 491.734  c
769.805 491.973 770.443 492.203 771.401 492.421  c
772.026 492.546 l
773.297 492.828 774.201 493.216 774.737 493.710  c
775.273 494.205 775.542 494.901 775.542 495.796  c
775.542 496.807 775.141 497.609 774.339 498.203  c
773.536 498.796 772.432 499.093 771.026 499.093  c
770.443 499.093 769.833 499.036 769.198 498.921  c
768.563 498.807 767.891 498.635 767.182 498.406  c
767.182 496.562 l
767.849 496.906 768.505 497.164 769.151 497.335  c
769.797 497.507 770.438 497.593 771.073 497.593  c
771.917 497.593 772.565 497.447 773.018 497.156  c
773.471 496.864 773.698 496.458 773.698 495.937  c
773.698 495.447 773.534 495.072 773.206 494.812  c
772.878 494.552 772.156 494.302 771.042 494.062  c
770.417 493.906 l
769.302 493.677 768.497 493.320 768.003 492.835  c
767.508 492.351 767.260 491.682 767.260 490.828  c
767.260 489.807 767.625 489.015 768.354 488.453  c
769.083 487.890 770.120 487.609 771.464 487.609  c
772.130 487.609 772.755 487.658 773.339 487.757  c
773.922 487.856 774.464 488.005 774.964 488.203  c
h
785.383 488.203 m
785.383 489.890 l
784.873 489.630 784.344 489.434 783.798 489.304  c
783.251 489.174 782.686 489.109 782.102 489.109  c
781.206 489.109 780.537 489.247 780.094 489.523  c
779.652 489.799 779.430 490.208 779.430 490.750  c
779.430 491.166 779.589 491.494 779.907 491.734  c
780.225 491.973 780.863 492.203 781.821 492.421  c
782.446 492.546 l
783.717 492.828 784.620 493.216 785.157 493.710  c
785.693 494.205 785.962 494.901 785.962 495.796  c
785.962 496.807 785.561 497.609 784.758 498.203  c
783.956 498.796 782.852 499.093 781.446 499.093  c
780.863 499.093 780.253 499.036 779.618 498.921  c
778.982 498.807 778.311 498.635 777.602 498.406  c
777.602 496.562 l
778.269 496.906 778.925 497.164 779.571 497.335  c
780.217 497.507 780.857 497.593 781.493 497.593  c
782.337 497.593 782.985 497.447 783.438 497.156  c
783.891 496.864 784.118 496.458 784.118 495.937  c
784.118 495.447 783.954 495.072 783.626 494.812  c
783.298 494.552 782.576 494.302 781.462 494.062  c
780.837 493.906 l
779.722 493.677 778.917 493.320 778.423 492.835  c
777.928 492.351 777.680 491.682 777.680 490.828  c
777.680 489.807 778.045 489.015 778.774 488.453  c
779.503 487.890 780.540 487.609 781.883 487.609  c
782.550 487.609 783.175 487.658 783.758 487.757  c
784.342 487.856 784.883 488.005 785.383 488.203  c
h
f
7.00000 w
Q
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1124.89 446.417 m
1088.62 422.419 l
1052.31 401.609 l
1016.02 384.008 l
979.721 369.617 l
943.431 358.436 l
907.146 350.465 l
870.866 345.704 l
834.591 344.153 l
798.320 345.812 l
762.054 350.681 l
725.793 358.760 l
689.537 370.049 l
653.286 384.548 l
617.039 402.257 l
580.797 423.175 l
551.219 442.870 l
S
newpath
544.560 447.304 m
557.319 444.815 l
552.051 442.316 l
551.777 436.491 l
h
f
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1163.95 446.408 m
1125.23 413.679 l
1086.47 385.294 l
1047.73 361.283 l
1008.98 341.648 l
989.616 333.472 l
970.249 326.389 l
950.884 320.400 l
931.520 315.505 l
912.157 311.703 l
892.796 308.996 l
873.437 307.382 l
854.079 306.862 l
834.723 307.436 l
815.368 309.104 l
796.014 311.865 l
776.663 315.721 l
757.312 320.670 l
737.964 326.713 l
718.616 333.850 l
699.271 342.080 l
660.584 361.823 l
621.903 385.942 l
583.229 414.435 l
550.655 442.123 l
S
newpath
544.560 447.304 m
556.941 443.342 l
551.417 441.475 l
550.465 435.722 l
h
f
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
869.829 476.453 m
861.740 484.697 l
838.795 504.986 l
815.727 522.305 l
792.534 536.656 l
769.218 548.038 l
745.778 556.451 l
722.214 561.896 l
698.526 564.372 l
674.714 563.879 l
650.778 560.417 l
626.718 553.987 l
602.534 544.588 l
578.227 532.220 l
553.795 516.883 l
529.240 498.578 l
510.644 482.548 l
S
newpath
504.584 477.325 m
510.409 488.947 l
511.401 483.201 l
516.938 481.373 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
909.807 476.418 m
899.297 487.044 l
873.849 509.367 l
848.276 528.408 l
822.580 544.167 l
796.760 556.645 l
770.816 565.841 l
744.748 571.755 l
718.557 574.387 l
692.241 573.738 l
665.801 569.807 l
639.237 562.594 l
612.550 552.099 l
585.738 538.323 l
558.803 521.265 l
531.743 500.925 l
510.625 482.574 l
S
newpath
504.587 477.327 m
510.365 488.972 l
511.380 483.230 l
516.924 481.424 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
949.763 476.426 m
936.854 489.392 l
908.902 513.749 l
880.826 534.511 l
852.626 551.679 l
824.302 565.252 l
795.855 575.230 l
767.283 581.614 l
738.587 584.403 l
709.768 583.597 l
680.824 579.196 l
651.757 571.201 l
622.565 559.611 l
593.250 544.426 l
563.810 525.647 l
534.247 503.273 l
510.610 482.597 l
S
newpath
504.589 477.329 m
510.329 488.993 l
511.363 483.255 l
516.913 481.467 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
989.726 476.442 m
974.412 491.739 l
943.956 518.131 l
913.376 540.614 l
882.672 559.190 l
851.845 573.859 l
820.893 584.620 l
789.817 591.473 l
758.618 594.418 l
727.294 593.456 l
695.847 588.586 l
664.276 579.808 l
632.580 567.122 l
600.761 550.529 l
568.818 530.029 l
536.751 505.620 l
510.598 482.615 l
S
newpath
504.591 477.332 m
510.299 489.012 l
511.349 483.276 l
516.904 481.503 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1029.70 476.456 m
1011.97 494.086 l
979.009 522.512 l
945.926 546.717 l
912.718 566.702 l
879.387 582.466 l
862.674 588.765 l
845.931 594.009 l
829.157 598.198 l
812.352 601.331 l
795.516 603.410 l
778.648 604.433 l
761.750 604.401 l
744.821 603.314 l
727.861 601.172 l
710.870 597.975 l
693.848 593.722 l
676.795 588.415 l
642.596 574.634 l
608.273 556.632 l
573.826 534.410 l
539.255 507.967 l
510.588 482.632 l
S
newpath
504.594 477.334 m
510.274 489.027 l
511.338 483.294 l
516.897 481.534 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1069.72 476.442 m
1049.53 496.434 l
1014.06 526.894 l
978.475 552.820 l
942.764 574.213 l
924.862 583.210 l
906.929 591.073 l
888.965 597.802 l
870.969 603.398 l
852.943 607.861 l
834.886 611.190 l
816.798 613.386 l
798.679 614.449 l
780.529 614.378 l
762.348 613.173 l
744.136 610.835 l
725.893 607.364 l
707.619 602.760 l
689.314 597.022 l
670.978 590.150 l
652.611 582.145 l
615.784 562.736 l
578.833 538.792 l
541.759 510.315 l
510.580 482.646 l
S
newpath
504.596 477.336 m
510.253 489.041 l
511.328 483.310 l
516.891 481.561 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1115.64 446.427 m
1077.42 427.406 l
1039.20 410.929 l
1000.99 396.995 l
962.783 385.605 l
924.578 376.757 l
886.376 370.454 l
848.178 366.693 l
809.984 365.476 l
771.793 366.803 l
733.606 370.673 l
695.423 377.086 l
657.243 386.043 l
619.067 397.543 l
580.894 411.587 l
542.725 428.174 l
511.712 443.719 l
S
newpath
504.560 447.304 m
517.528 446.397 l
512.606 443.271 l
513.047 437.457 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
